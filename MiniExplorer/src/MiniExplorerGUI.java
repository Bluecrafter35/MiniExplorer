
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Christoph Mautner
 */
public class MiniExplorerGUI extends javax.swing.JFrame
{
    private DateiModell model = new DateiModell();
    private File dir;
    FileComparer fc = new FileComparer();
    
    /**
     * Creates new form MiniExplorerGUI
     */
    public MiniExplorerGUI()
    {
        initComponents();
        this.jlList.setModel(model);
        this.jlList.setCellRenderer(new FileListRenderer());
        
        dir = new File(".");
        
        try {
            this.setTitle(dir.getCanonicalPath());
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        Datei d;
        for(File f: dir.listFiles())
        {
            //f.getAbsolutePath();
            
            d= new Datei(f.getAbsolutePath());
            model.addDatei(d);
        }
        model.addDatei(new Datei(".."));
        model.sort(fc);
        dir=new File(dir.getAbsolutePath());
        dir = dir.getParentFile();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        jlList = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jlList.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                onChangeDir(evt);
            }
        });
        jScrollPane1.setViewportView(jlList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onChangeDir(java.awt.event.MouseEvent evt)//GEN-FIRST:event_onChangeDir
    {//GEN-HEADEREND:event_onChangeDir
        try
        {
            if(evt.getClickCount()>1)
            {
                Datei d = (Datei) model.getElementAt(jlList.getSelectedIndex());
                if(d.isFile())
                {
                    throw new Exception("Leider können wir nur Ordner öffnen und keine Files");
                }
                if(d.getName().equalsIgnoreCase(".."))
                {
                    dir = dir.getParentFile();
                    model.clear();
                    for(File f: dir.listFiles())
                    {
                        //f.getAbsolutePath();
                        d= new Datei(f.getAbsolutePath());
                        model.addDatei(d);

                    }
                    try {
                        this.setTitle(dir.getCanonicalPath());
                    } catch (IOException ex) {
                        Logger.getLogger(MiniExplorerGUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    model.addDatei(new Datei(".."));
                    model.sort(fc);
                    this.jlList.setSelectedIndex(0);    
                }
                else
                {
                    dir = new File(dir.getAbsoluteFile()+"\\"+d.getName());
                    model.clear();
                    for(File f: dir.listFiles())
                    {
                        //f.getAbsolutePath();
                        d= new Datei(f.getAbsolutePath());
                        model.addDatei(d);

                    }
                    try {
                        this.setTitle(dir.getCanonicalPath());
                    } catch (IOException ex) {
                        Logger.getLogger(MiniExplorerGUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    model.addDatei(new Datei(".."));
                    model.sort(fc);
                    this.jlList.setSelectedIndex(0);
                }
            }
        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_onChangeDir

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MiniExplorerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MiniExplorerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MiniExplorerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MiniExplorerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new MiniExplorerGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<Datei> jlList;
    // End of variables declaration//GEN-END:variables
}
